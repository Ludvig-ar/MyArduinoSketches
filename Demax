/*
  Prueba Dos Motores V1
  
  by Lucila Mortara
 */

// Conectar los pines del controlador de motores a los pines digitales del Arduino
// Motor 1 -> Motores Lado Izquierdo
int enA = 10;
int in1 = 9;
int in2 = 8;
// Motor 2 -> Motores Lado Derecho
int enB = 5;
int in3 = 7;
int in4 = 6;
// Constantes para definir para donde se mueve
#define MOTOR_DIR_ADELANTE  0  
#define MOTOR_DIR_ATRAS   1  
// Contador Demo
int demo = 0;
// Botonito
//int pinboton = 2;
//int estadoboton = 0;

// Sensor Ultrasonido
#include <NewPing.h>

#define TRIGGER_PIN  2  // Arduino pin tied to trigger pin on the ultrasonic sensor.
#define ECHO_PIN     3  // Arduino pin tied to echo pin on the ultrasonic sensor.
#define MAX_DISTANCE 100 // Maximum distance we want to ping for (in centimeters). Maximum sensor distance is rated at 400-500cm.

NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE); // NewPing setup of pins and maximum distance.


void setup()
{
  // Setea todos los pins de control como salidas
  pinMode(enA, OUTPUT);
  pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
  pinMode(enB, OUTPUT);
  pinMode(in3, OUTPUT);
  pinMode(in4, OUTPUT);
  //pinMode(pinboton, INPUT);// Boton
  Serial.begin(9600); // Open serial monitor at 115200 baud to see ping results.
  delay(5000);
}
void loop()
{
  //estadoboton = digitalRead(pinboton);
  if(demo<5 ){
  delay(50);                      // Wait 50ms between pings (about 20 pings/sec). 29ms should be the shortest delay between pings.
  unsigned int uS = sonar.ping(); // Send ping, get ping time in microseconds (uS).
  Serial.print("Ping: ");
  Serial.print(uS / US_ROUNDTRIP_CM); // Convert ping time to distance and print result (0 = outside set distance range, no ping echo)
  Serial.println("cm");   
  if (uS / US_ROUNDTRIP_CM < 10 ){
  // Muy cerca de un objeto
  // Dobla a la izquierda
  Serial.println("Muy cerca. Doblo a la izquierda");
  motorDireccion(1, MOTOR_DIR_ADELANTE);
  seteaVelocidad(1, 200);
  motorDireccion(2, MOTOR_DIR_ATRAS);
  seteaVelocidad(2, 200);
  } else {
  // No tan cerca
  // Prende motor 1 y 2 -> Adelante" y Pone la velocidad de ambos motores a 200
  Serial.println("No tan cerca. Sigo derecho");
  motorDireccion(1, MOTOR_DIR_ADELANTE);
  seteaVelocidad(1, 200);
  motorDireccion(2, MOTOR_DIR_ADELANTE);
  seteaVelocidad(2, 200);  
  }  
  delay(1000);
  demo++;
  }
  // Apaga motores
  motorPara(1);
  motorPara(2);
}

void motorDireccion(char motor_num, byte direccion)
{
  if (motor_num == 1) {
    if (direccion == MOTOR_DIR_ADELANTE) {
      digitalWrite(in1, LOW);
      digitalWrite(in2, HIGH);
    } else {
      digitalWrite(in1, HIGH);
      digitalWrite(in2, LOW);
    }
  } else {
    if (direccion == MOTOR_DIR_ADELANTE) {
      digitalWrite(in3, HIGH);
      digitalWrite(in4, LOW);
    } else {
      digitalWrite(in3, LOW);
      digitalWrite(in4, HIGH);
    }
  }
}

void seteaVelocidad(char motor_num, char motor_speed)
{
  if (motor_num == 1)
  {
    analogWrite(enA, motor_speed);
  }
  else
  {
    analogWrite(enB, motor_speed);
  }
}

void motorPara(char motor_num)
{
  seteaVelocidad(motor_num, 0);
  if (motor_num == 1)
  {
    digitalWrite(in1, LOW);
    digitalWrite(in2, LOW);
  }
  else
  {
    digitalWrite(in3, LOW);
    digitalWrite(in4, LOW);
  }
}
